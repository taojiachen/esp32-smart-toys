[1/11] Performing build step for 'bootloader'
[1/1] cd /home/tjc/esp/develop/esp-ai/build/bootloader/esp-idf/esptool_py && /home/tjc/.espressif/python_env/idf5.3_py3.8_env/bin/python /home/tjc/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/tjc/esp/develop/esp-ai/build/bootloader/bootloader.bin
Bootloader binary size 0x5810 bytes. 0x27f0 bytes (31%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app/app_sr.c.obj
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] cd /home/tjc/esp/develop/esp-ai/build/esp-idf/main && /home/tjc/.espressif/python_env/idf5.3_py3.8_env/bin/python /home/tjc/esp/esp-idf/components/spiffs/spiffsgen.py 0x600000 /home/tjc/esp/develop/esp-ai/spiffs /home/tjc/esp/develop/esp-ai/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable esp-ai.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/tjc/esp/develop/esp-ai/build/esp-ai.bin
[9/9] cd /home/tjc/esp/develop/esp-ai/build/esp-idf/esptool_py && /home/tjc/.espressif/python_env/idf5.3_py3.8_env/bin/python /home/tjc/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/tjc/esp/develop/esp-ai/build/partition_table/partition-table.bin /home/tjc/esp/develop/esp-ai/build/esp-ai.bin
esp-ai.bin binary size 0x173fa0 bytes. Smallest app partition is 0x400000 bytes. 0x28c060 bytes (64%) free.
